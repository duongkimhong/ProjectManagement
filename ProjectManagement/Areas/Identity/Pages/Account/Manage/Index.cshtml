@page
@model IndexModel
@{
	ViewData["Title"] = "Profile";
	ViewData["ActivePage"] = ManageNavPages.Index;
}

<h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />
<div class="row">
	<form id="profile-form" method="post" enctype="multipart/form-data">
		<div class="row">
			<div class="col-md-6">
				<div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
				<div class="form-floating mb-3">
					<input asp-for="Username" class="form-control" placeholder="Please choose your username." disabled />
					<label asp-for="Username" class="form-label"></label>
				</div>
				<div class="form-floating mb-3">
					<input asp-for="Input.PhoneNumber" class="form-control" placeholder="Please enter your phone number." />
					<label asp-for="Input.PhoneNumber" class="form-label"></label>
					<span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
				</div>
				<div class="form-floating mb-3">
					<input type="date" asp-for="Input.DateOfBirth" class="form-control" placeholder="Please select your date of birth." />
					<label asp-for="Input.DateOfBirth" class="form-label"></label>
					<span asp-validation-for="Input.DateOfBirth" class="text-danger"></span>
				</div>
			</div>
			<div class="col-md-6">
				<div class="form-floating mb-3">
					<input asp-for="Input.FullName" class="form-control" placeholder="Please enter your full name." />
					<label asp-for="Input.FullName" class="form-label"></label>
					<span asp-validation-for="Input.FullName" class="text-danger"></span>
				</div>
				<div class="form-floating mb-3">
					<input asp-for="Input.Address" class="form-control" placeholder="Please enter your address." />
					<label asp-for="Input.Address" class="form-label"></label>
					<span asp-validation-for="Input.Address" class="text-danger"></span>
				</div>
				<div class="form-group mb-3">
					<div class="row">
						<div class="col-md-8">
							<label for="profile-image" class="form-label">Choose profile image</label>
							<input type="file" class="form-control-file" id="profile-image" name="Input.ProfileImageFile" accept="image/*" />
							<span asp-validation-for="Input.ProfileImageFile" class="text-danger"></span>
						</div>
						<div class="col-md-4 d-flex justify-content-end">
							<img id="uploaded-image" src="@Model.UploadedImageUrl" alt="Uploaded Image" style="max-width: 50%;" />
						</div>
					</div>
				</div>
			</div>
			<div class="col-md-12">
				<div class="form-floating mb-3">
					<textarea asp-for="Input.Description" class="form-control" placeholder="A short description about you." style="height: 100px;"></textarea>
					<label asp-for="Input.Description" class="form-label"></label>
					<span asp-validation-for="Input.Description" class="text-danger"></span>
				</div>
			</div>

		</div>
		<button id="update-profile-button" type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
	</form>
</div>


@section Scripts {
	<partial name="_ValidationScriptsPartial" />
}

<script>
	document.addEventListener("DOMContentLoaded", function () {
		const uploadInput = document.getElementById("profile-image");
		const uploadedImage = document.getElementById("uploaded-image");
		const imageInfo = document.getElementById("image-info");

		uploadInput.addEventListener("change", function () {
			const file = this.files[0];
			if (file) {
				const reader = new FileReader();
				reader.onload = function (e) {
					uploadedImage.src = e.target.result;
					uploadedImage.style.display = "block";
				};
				reader.readAsDataURL(file);
				imageInfo.innerHTML = `
										<p>File name: ${file.name}</p>
										<p>File type: ${file.type}</p>
										<p>File size: ${formatBytes(file.size)}</p>
									`;
			}
		});

		function formatBytes(bytes, decimals = 2) {
			if (bytes === 0) return '0 Bytes';
			const k = 1024;
			const dm = decimals < 0 ? 0 : decimals;
			const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
			const i = Math.floor(Math.log(bytes) / Math.log(k));
			return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
		}
	});

</script>
